# Generated by Django 5.1 on 2024-08-22 20:38

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("polls", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClaimForEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_text", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of Document", max_length=200),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Embedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(help_text="Text to be embedded")),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        blank=True,
                        dimensions=4,
                        help_text="Vector embedding",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Embedding32",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "embed_source",
                    models.CharField(
                        help_text="Indicates whether the embedding is for a claim or document",
                        max_length=10,
                    ),
                ),
                (
                    "embed_id",
                    models.BigIntegerField(
                        help_text="ID in the respective table for the claim/document Embedding"
                    ),
                ),
                (
                    "source_id",
                    models.BigIntegerField(
                        help_text="ID in the respective table for the claim/document Embedding"
                    ),
                ),
                (
                    "orig_source_id",
                    models.BigIntegerField(
                        help_text="ID in the respective table for the claim/document Embedding"
                    ),
                ),
                ("embed_type_name", models.CharField(max_length=20)),
                (
                    "embedding_vector",
                    pgvector.django.vector.VectorField(
                        blank=True,
                        dimensions=32,
                        help_text="32 element Vector embedding",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Embedding768",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "embed_source",
                    models.CharField(
                        help_text="Indicates whether the embedding is for a claim or document",
                        max_length=10,
                    ),
                ),
                (
                    "embed_id",
                    models.BigIntegerField(
                        help_text="ID in the respective table for the claim/document Embedding"
                    ),
                ),
                (
                    "source_id",
                    models.BigIntegerField(
                        help_text="ID to the document/claim xxForEmbedding) record that has text that used for embeddning"
                    ),
                ),
                (
                    "orig_source_id",
                    models.BigIntegerField(
                        help_text="ID to the document/claim record that has the original source text in the documents (before any modifications)"
                    ),
                ),
                ("embed_type_name", models.CharField(max_length=20)),
                (
                    "embedding_vector",
                    pgvector.django.vector.VectorField(
                        blank=True,
                        dimensions=768,
                        help_text="768 element Vector embedding",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmbeddingType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("description", models.TextField()),
                ("size", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="ModificationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Patent",
            fields=[
                ("patent_ref", models.CharField(max_length=30)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("full_patent_ref", models.CharField(default="None", max_length=30)),
                ("patent_country", models.CharField(max_length=3)),
                ("patent_number", models.CharField(max_length=30)),
                ("patent_type", models.CharField(default="Utility", max_length=30)),
                ("patent_kind_code", models.CharField(default="", max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.CharField(max_length=200)),
                ("pub_date", models.DateTimeField(verbose_name="date published")),
            ],
        ),
        migrations.CreateModel(
            name="DocSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("section_id", models.CharField(max_length=20)),
                ("section_title", models.CharField(default="", max_length=200)),
                ("section_title_text", models.CharField(default="", max_length=200)),
                ("text", models.TextField()),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.document"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClaimEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.claimforembedding",
                    ),
                ),
                (
                    "embed_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.embeddingtype",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="claimforembedding",
            name="modification_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="polls.modificationtype"
            ),
        ),
        migrations.CreateModel(
            name="PatentClaim",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("claim_number", models.IntegerField()),
                ("claim_id", models.CharField(max_length=30)),
                ("orig_claim_id", models.CharField(default="", max_length=30)),
                ("related_claim", models.BooleanField(default=False)),
                ("key_related_claim", models.BooleanField(default=False)),
                ("claim_text", models.TextField(default="")),
                (
                    "patent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.patent"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="claimforembedding",
            name="claim",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="polls.patentclaim"
            ),
        ),
        migrations.CreateModel(
            name="ClaimElement",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("element_id", models.CharField(max_length=30)),
                ("element_number", models.IntegerField()),
                ("element_text", models.TextField(default="")),
                (
                    "claim",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.patentclaim",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Choice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("choice_text", models.CharField(max_length=200)),
                ("votes", models.IntegerField(default=0)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.question"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SectionForEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_text", models.TextField()),
                (
                    "modification_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.modificationtype",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.docsection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SectionEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "embed_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.embeddingtype",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.sectionforembedding",
                    ),
                ),
            ],
        ),
    ]
